你是一名资深全栈工程师，请帮我生成一个 **小米电视第三方应用安装工具网站平台** 的项目初始化方案，包括目录结构和核心代码框架。  

### 🎯 项目说明
这是一个可以部署在云服务器上的 Web 工具，用户可以通过浏览器上传 APK，并安装到小米电视（基于 Android TV）。  

### 🏗️ 目录结构
请输出一个标准化的项目结构，例如：  



mi-tv-app-installer/

├── backend/        # 后端服务 (Node.js + Express 或 Python + FastAPI)

│  ├── adb/         # ADB 封装模块

│  ├── routes/       # API 路由

│  ├── utils/        # 工具函数

│  ├── app.js        # 主入口 (Node.js)

│  ├── requirements.txt   # Python依赖 (如选FastAPI)

│  └── package.json     # Node依赖 (如选Express)

│

├── frontend/        # 前端 (React + TailwindCSS)

│  ├── src/

│  │  ├── components/   # UI组件 (上传框、进度条等)

│  │  ├── pages/      # 页面 (主页、安装状态)

│  │  ├── api/       # 调用后端API

│  │  ├── App.jsx

│  │  └── main.jsx

│  └── package.json

│

├── docker-compose.yml   # Docker编排

├── Dockerfile.backend

├── Dockerfile.frontend

└── README.md



### 🔑 核心功能
1. **设备连接**
   - 用户输入小米电视 IP 地址，后端调用 `adb connect {ip}:5555`。  
   - 返回连接成功/失败状态。  

2. **应用上传与安装**
   - 前端提供 APK 上传表单。  
   - 上传后，后端保存临时文件并执行 `adb install`。  
   - 安装完成后返回结果给前端。  

3. **应用管理（可选）**
   - 获取已安装应用列表：`adb shell pm list packages`。  
   - 卸载应用：`adb uninstall package.name`。  

4. **UI 要求**
   - 首页：IP 地址输入框 + “连接设备”按钮。  
   - 上传区：APK 文件拖拽上传 + 安装进度提示。  
   - 结果区：显示成功/失败 + 提示用户下一步操作。  

### 📦 输出要求
请生成以下内容：  
1. **后端核心代码示例**：  
   - 设备连接 API（/connect）  
   - 上传并安装 APK 的 API（/install）  
   - 使用 Node.js (Express) + `child_process` 调用 adb  

2. **前端核心代码示例**：  
   - React 上传组件  
   - 安装进度条组件  
   - API 调用函数  

3. **Docker 部署方案**：  
   - 后端与前端分离，使用 docker-compose 管理  
   - 提供 Nginx 作为前端静态资源托管  

4. **云服务器部署说明**  

请注意：代码要清晰、模块化、可扩展，并加上中文注释，方便后续开发。  